---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ols-sar-check
rules:
- apiGroups: ["authentication.k8s.io"]
  resources:
  - tokenreviews
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources:
  - subjectaccessreviews
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ols-sar-check
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ols-sar-check
subjects:
- kind: ServiceAccount
  name: default
  namespace: openshift-lightspeed
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ols-user
rules:
- nonResourceURLs:
    - "/ols-access"
  verbs:
    - "get"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ols-metrics-user
rules:
- nonResourceURLs:
    - "/ols-metrics-access"
  verbs:
    - "get"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clusterversion-viewer
rules:
- apiGroups: ["config.openshift.io"]
  resources: ["clusterversions"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clusterversion-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clusterversion-viewer
subjects:
- kind: ServiceAccount
  name: default
  namespace: openshift-lightspeed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lightspeed-w-rag
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: lightspeed-w-rag
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: lightspeed-w-rag
    spec:
      volumes:
        - name: olsconfig
          configMap:
            name: olsconfig
        - name: openai
          secret:
            secretName: openai
        - name: tls-certs
          secret:
            secretName: lightspeed-certs
      containers:
      # this example is without the data collection sidecar
      - image: quay.io/openshift-lightspeed/lightspeed-service-api:latest
        imagePullPolicy: Always
        name: lightspeed-w-rag
        env:
          - name: OLS_CONFIG_FILE
            value: /app-root/config/olsconfig.yaml
        ports:
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
          - name: olsconfig
            mountPath: /app-root/config
          - name: openai
            mountPath: /app-root/config/openai
          - name: tls-certs
            mountPath: /app-root/certs
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: lightspeed-certs
  name: lightspeed-app-server
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8443-tcp
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    deployment: lightspeed-w-rag
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
 name: lightspeed-w-rag
spec:
 port:
   targetPort: 8443-tcp
 tls:
   insecureEdgeTerminationPolicy: Redirect
   termination: reencrypt
 to:
   kind: Service
   name: lightspeed-app-server
   weight: 100
 wildcardPolicy: None

---
apiVersion: v1
stringData:
  openai_api_key.txt: key
kind: Secret
metadata:
  name: openai
type: Opaque
